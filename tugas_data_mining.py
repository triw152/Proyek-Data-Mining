# -*- coding: utf-8 -*-
"""TUGAS DATA MINING

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1p0VApGfzF_F92Y84TL6sm_UUiC5l1ElU
"""

from google.colab import drive
import pandas as pd
import numpy as np

# Langkah 1: Mount Google Drive untuk mengakses file
drive.mount('/content/drive')

# Langkah 2: Memuat dataset ke dalam DataFrame Pandas
dataset_path = '/content/drive/My Drive/datamining//movie_sample_dataset.csv'
df = pd.read_csv(dataset_path)

# Langkah 3: Tampilkan 5 baris pertama dari dataset
print("Tampilan 5 baris pertama:")
print(df.head())

# Langkah 4: Tampilkan informasi umum tentang dataset
print("\nInformasi Umum tentang Dataset:")
df.info()

# Langkah 5: Tangani nilai yang hilang dengan mengganti string tertentu dengan NaN
df.replace(['', 'Nan', 'N/A', 'Null'], np.nan, inplace=True)

# Langkah 6: Hapus baris duplikat dan reset indeks
df.drop_duplicates(inplace=True)
df.reset_index(drop=True, inplace=True)

# Langkah 7: Hapus baris yang memiliki nilai hilang di kolom 'gross' dan 'budget'
df.dropna(subset=['gross', 'budget'], inplace=True)

# Langkah 8: Ubah semua kolom string menjadi huruf besar
string_columns = df.select_dtypes(include='object').columns
df[string_columns] = df[string_columns].apply(lambda x: x.str.lower())

# Langkah 9: Hapus setiap baris yang tersisa dengan nilai hilang
df.dropna(inplace=True)

# Langkah 10: Hapus baris dengan nilai negatif di kolom numerik
numeric_columns = df.select_dtypes(include=[np.number])
df = df[(numeric_columns >= 0).all(axis=1)]

# Langkah 11: Reset indeks setelah menghapus baris
df.reset_index(drop=True, inplace=True)

# Langkah 12: Tampilkan 5 baris pertama setelah pra-pemrosesan
print("Pratampilan 5 baris pertama setelah pra-pemrosesan:")
print(df.head())

# Langkah 13: Periksa jumlah nilai yang hilang di setiap kolom
print("\nJumlah nilai yang hilang di setiap kolom:")
print(df.isnull().sum())

# Langkah 14: Ubah tipe kolom tertentu menjadi integer
int_columns = ['duration', 'gross', 'title_year', 'budget', 'movie_facebook_likes']
for column in int_columns:
    df[column] = pd.to_numeric(df[column], errors='coerce').astype('Int64')

# Langkah 15: Ubah tipe kolom tertentu menjadi float
float_columns = ['imdb_score']
for column in float_columns:
    df[column] = pd.to_numeric(df[column], errors='coerce')

# Langkah 16: Ubah tipe kolom tertentu menjadi string
str_columns = ['director_name', 'movie_title', 'actors']
for column in str_columns:
    df[column] = df[column].astype(str)

# Langkah 17: Ubah tipe kolom tertentu menjadi kategorikal
category_columns = ['color', 'genres', 'language', 'country']
for column in category_columns:
    df[column] = df[column].astype('category')

# Langkah 18: Tangani nilai NaN yang dihasilkan dari kegagalan konversi
df.dropna(subset=int_columns + float_columns, inplace=True)  # Hapus baris dengan NaN di kolom ini

# Langkah 19: Periksa tipe data setelah konversi
print("Tipe data setelah konversi:")
print(df.dtypes)

# Langkah 20: Pisahkan 'genres' berdasarkan '|'
df['genres'] = df['genres'].str.split('|')

# Langkah 21: Lakukan One-Hot Encoding pada kolom 'genres'
df_genres = df['genres'].explode().str.get_dummies().groupby(level=0).max()
df = pd.concat([df, df_genres], axis=1)  # Gabungkan hasil One-Hot Encoding dengan DataFrame utama

# Langkah 22: Tampilkan DataFrame yang diperbarui
print(df.head())

# Langkah 23: Normalisasi teks di kolom yang dipilih
text_columns = ['director_name', 'movie_title', 'genres', 'actors', 'language', 'country']
df[text_columns] = df[text_columns].apply(lambda x: x.str.lower() if x.dtype == 'object' else x)

# Langkah 24: Tampilkan hasil normalisasi teks
print(df[text_columns].head())

# Langkah 25: Simpan DataFrame yang telah dibersihkan ke file CSV baru
output_path = '/content/drive/My Drive/datamining/movie_dataset_cleaned.csv'
df.to_csv(output_path, index=False)

# Langkah 26: Konfirmasi bahwa dataset telah disimpan
print(f"Dataset yang telah diproses berhasil disimpan ke: {output_path}")